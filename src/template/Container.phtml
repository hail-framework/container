class Container extends Hail\Container\Container
{
    protected static array $entryPoints = [
        <?=\implode("\n\t\t", $entryPoints)?>
    ];

    protected array $alias = [
        <?=\implode("\n\t\t", $alias)?>
    ];

    protected array $abstractAlias = [
        <?=\implode("\n\t\t", $abstractAlias)?>
    ];

    public function get(string $name): mixed
    {
        $name = $this->getAlias($name);

        switch (true) {
            case isset($this->active[$name]):
                return $this->values[$name];

            case isset(static::$entryPoints[$name]):
                $this->active[$name] = true;
                return $this->values[$name] = $this->{static::$entryPoints[$name]}();

            default:
                return parent::get($name);
        }
    }

    <?=\implode("\n\n", $methods)?>
}
